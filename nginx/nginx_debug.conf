events {}

http {
    # Definizione del formato di log
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # File di log per HTTP
    access_log /var/log/nginx/http_access.log main;
    error_log /var/log/nginx/http_error.log warn;

    server {
        listen 80;  # Porta HTTP
        location /pippo {
            proxy_pass http://host.docker.internal:8585;  # Reindirizza al container HTTP
        }
    }
}


stream {
    upstream stream_backend {
        server 'host.docker.internal:9000' max_fails=2 fail_timeout=30s; # rabbitmq-1 private address in my network
    }
    log_format proxy '$remote_addr [$time_local] '
                     '$protocol $status $bytes_sent $bytes_received '
                     '$session_time "$upstream_addr" '
                     '"$upstream_bytes_sent" "$upstream_bytes_received" "$upstream_connect_time"';

    access_log  /var/log/nginx/stream.log proxy;

    server {
        listen 5672;
        proxy_connect_timeout 5s;
        # TCP traffic will be forwarded to the "stream_backend" upstream group
        proxy_pass stream_backend;
    }
}


